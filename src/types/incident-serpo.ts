/**
 * TypeScript interface for the incident_serpo table
 * Matches the SQL schema exactly
 */
export interface IncidentSerpo {
  /** Primary key - UUID generated by gen_random_uuid() */
  id: string; // UUID as string in TypeScript
  
  /** Incident identifier - required text field */
  id_incident: string;
  
  /** Crossing zone - required text field */
  crossing_zona: string;
  
  /** Base64 encoded image - initial odometer photo */
  foto_odo_awal: string | null;
  
  /** Base64 encoded image - initial team photo */
  foto_tim_awal: string | null;
  
  /** Base64 encoded image - final odometer photo */
  foto_odo_akhir: string | null;
  
  /** Base64 encoded image - final team photo */
  foto_tim_akhir: string | null;
  
  /** Incident start timestamp */
  started_at: string | null; // ISO string representation of timestamp with time zone
  
  /** Incident end timestamp */
  stopped_at: string | null; // ISO string representation of timestamp with time zone
  
  /** Duration text representation */
  duration: string | null;
  
  /** Status with default 'active' */
  status: string; // Could be 'active' | 'completed' | 'cancelled' etc.
  
  /** Record creation timestamp - auto-generated */
  created_at: string; // ISO string representation of timestamp with time zone
  
  /** Record update timestamp - auto-updated */
  updated_at: string; // ISO string representation of timestamp with time zone
  
  /** Foreign key to auth.users table */
  created_by: string | null; // UUID as string
  
  /** Optional description text */
  description: string | null;
  
  /** Google Sheets sync status - defaults to false */
  is_synced_to_sheet: boolean | null;
  
  /** Image upload status - defaults to false */
  is_image_uploaded: boolean | null;
}

/**
 * Type for creating a new incident (excludes auto-generated fields)
 */
export interface CreateIncidentSerpo {
  id_incident: string;
  crossing_zona: string;
  foto_odo_awal?: string | null;
  foto_tim_awal?: string | null;
  foto_odo_akhir?: string | null;
  foto_tim_akhir?: string | null;
  started_at?: string | null;
  stopped_at?: string | null;
  duration?: string | null;
  status?: string; // defaults to 'active'
  created_by?: string | null;
  description?: string | null;
  is_synced_to_sheet?: boolean | null;
  is_image_uploaded?: boolean | null;
}

/**
 * Type for updating an existing incident
 */
export interface UpdateIncidentSerpo {
  id_incident?: string;
  crossing_zona?: string;
  foto_odo_awal?: string | null;
  foto_tim_awal?: string | null;
  foto_odo_akhir?: string | null;
  foto_tim_akhir?: string | null;
  started_at?: string | null;
  stopped_at?: string | null;
  duration?: string | null;
  status?: string;
  description?: string | null;
  is_synced_to_sheet?: boolean | null;
  is_image_uploaded?: boolean | null;
  updated_at?: string; // Will be auto-updated by database
}

/**
 * Status enum for better type safety
 */
export enum IncidentStatus {
  ACTIVE = 'active',
  COMPLETED = 'completed',
  CANCELLED = 'cancelled',
  PENDING = 'pending'
}

/**
 * Photo field names for the incident
 */
export const PHOTO_FIELDS = [
  'foto_odo_awal',
  'foto_tim_awal', 
  'foto_odo_akhir',
  'foto_tim_akhir'
] as const;

export type PhotoField = typeof PHOTO_FIELDS[number];